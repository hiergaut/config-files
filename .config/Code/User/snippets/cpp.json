{
	// Place your snippets for cpp here. Each snippet is defined under a snippet name and has a prefix, body and 
	// description. The prefix is what is used to trigger the snippet and the body will be expanded and inserted. Possible variables are:
	// $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders. Placeholders with the 
	// same ids are connected.
	// Example:
	// "Print to console": {
	// 	"prefix": "log",
	// 	"body": [
	// 		"console.log('$1');",
	// 		"$2"
	// 	],
	// 	"description": "Log output to console"
	// }
	"include": {
		"prefix": "i",
		"body": "#include <$1>$0",
	},
	"include header": {
		"prefix": "in",
		"body": "#include \"$1\"$0",
	},
	"std::cout": {
		"prefix": "c",
		"body": "std::cout << $0",
	},
	"std::endl": {
		"prefix": "e",
		"body": "<< std::endl",
	},
	"std::newline": {
		"prefix": "n",
		"body": "std::cout << std::endl;",
	},
	"std::": {
		"prefix": "s",
		"body": "std::",
	},
	"std::string": {
		"prefix": "ss",
		"body": "std::string",
	},
	"std::static_cast": {
		"prefix": "sc",
		"body": "static_cast<$0>(",
	},
	// "include2": {
	// 	"prefix": "include\"\"",
	// 	"body": "#include \"$1\"$0",
	// },
	// "::": {
	// 	"prefix": "::",
	// 	"body": [
	// 		"$1::$2($3) {",
	// 		"\t$0",
	// 		"}"
	// 	],
	// },
	"class": {
		"prefix": "cl",
		"body": [
			"class $1 {",
			"  public:",
			"\n",
			"  private:",
			"\t$0",
			"};"
		],
	},
	// "<": {
	// 	"prefix": "<",
	// 	"body": "<$1>$0",
	// }
}