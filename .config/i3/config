# This file has been auto-generated by i3-config-wizard(1).
# It will not be overwritten, so edit it as you like.
#
# Should you change your keyboard layout some time, delete
# this file and re-run i3-config-wizard(1).
#
set $fontSize 12
set $browser chromium

# i3 config file (v4)
#
# Please see https://i3wm.org/docs/userguide.html for a complete reference!

set $altG Mod1
set $meta Mod4


# Font for window titles. Will also be used by the bar unless a different font
# is used in the bar {} block below.
font pango:Ubuntu Mono $fontSize


# Shortcut
bindsym $altG+t exec i3-sensible-terminal
bindsym $altG+BackSpace kill
bindsym $altG+d exec dmenu_run
bindsym $altG+c exec xdotool click 1 && xdotool keydown Escape
bindsym $altG+f exec $browser

# This font is widely installed, provides lots of unicode glyphs, right-to-left
# text rendering and scalability on retina/hidpi displays (thanks to pango).
#font pango:DejaVu Sans Mono 8

# Before i3 v4.8, we used to recommend this one as the default:
# font -misc-fixed-medium-r-normal--13-120-75-75-C-70-iso10646-1
# The font above is very space-efficient, that is, it looks good, sharp and
# clear in small sizes. However, its unicode glyph coverage is limited, the old
# X core fonts rendering does not support right-to-left and this being a bitmap
# font, it doesn’t scale on retina/hidpi displays.

# Use Mouse+$altG to drag floating windows to their wanted position
floating_modifier $altG

# start a terminal
#bindsym $altG+t exec i3-sensible-terminal

# kill focused window
#bindsym $altG+BackSpace kill

# start dmenu (a program launcher)
#bindsym $altG+d exec dmenu_run
# There also is the (new) i3-dmenu-desktop which only displays applications
# shipping a .desktop file. It is a wrapper around dmenu, so you need that
# installed.
# bindsym $altG+d exec --no-startup-id i3-dmenu-desktop

# change focus
bindsym $altG+b focus left
bindsym $altG+m focus down
bindsym $altG+h focus up
bindsym $altG+w focus right

# move focused window
bindsym $altG+Shift+B move left
bindsym $altG+Shift+M move down
bindsym $altG+Shift+H move up
bindsym $altG+Shift+W move right



# split in horizontal orientation
bindsym $altG+l split h

# split in vertical orientation
bindsym $altG+j split v

# enter fullscreen mode for the focused container
bindsym $altG+space fullscreen toggle

# change container layout (stacked, tabbed, toggle split)
bindsym $altG+a layout stacking
bindsym $altG+e layout tabbed
bindsym $altG+u layout toggle split

# toggle tiling / floating
bindsym $altG+i floating toggle

# change focus between tiling / floating windows
bindsym $altG+y focus mode_toggle

# focus the parent container
bindsym $altG+p focus parent

# focus the child container
bindsym $altG+Shift+c focus child

# Define names for default workspaces for which we configure key bindings later on.
# We use variables to avoid repeating the names in multiple places.
#set $ws1 "1"
#set $ws2 "2"
#set $ws3 "3"
#set $ws4 "4"
#set $ws5 "5"
#set $ws6 "6"
#set $ws7 "7"
#set $ws8 "8"
#set $ws9 "9"
#set $ws10 "10"

# switch to workspace
bindsym $altG+asterisk exec --no-startup-id ~/bin/own_screen_workspace 0
bindsym $altG+parenright exec --no-startup-id ~/bin/own_screen_workspace 2
bindsym $altG+plus exec --no-startup-id ~/bin/own_screen_workspace 4
bindsym $altG+bracketright exec --no-startup-id ~/bin/own_screen_workspace 6
bindsym $altG+exclam exec --no-startup-id ~/bin/own_screen_workspace 8
bindsym $altG+equal exec --no-startup-id ~/bin/own_screen_workspace 9

# move focused container to workspace
bindsym $altG+Shift+0 exec ~/bin/own_screen_moveWorkspace 0
bindsym $altG+Shift+2 exec ~/bin/own_screen_moveWorkspace 2
bindsym $altG+Shift+4 exec ~/bin/own_screen_moveWorkspace 4
bindsym $altG+Shift+6 exec ~/bin/own_screen_moveWorkspace 6
bindsym $altG+Shift+8 exec ~/bin/own_screen_moveWorkspace 8

# reload the configuration file
bindsym $altG+r reload
# restart i3 inplace (preserves your layout/session, can be used to upgrade i3)
bindsym $altG+Shift+R restart
# exit i3 (logs you out of your X session)
#bindsym $altG+Shift+greater exec "i3-nagbar -t warning -m 'You pressed the exit shortcut. Do you really want to exit i3? This will end your X session.' -B 'Yes, exit i3' 'i3-msg exit'"

bindsym $meta+F8 exec systemctl suspend

# resize window (you can also use the mouse for that)
set $int 10
bindsym $meta+minus resize shrink width $int px or $int ppt
bindsym $meta+plus resize grow width $int px or $int ppt
bindsym $meta+Shift+minus resize shrink height $int px or $int ppt
bindsym $meta+Shift+plus resize grow height $int px or $int ppt
#mode "resize" {
#        # These bindings trigger as soon as you enter the resize mode
#
#        # Pressing left will shrink the window’s width.
#        # Pressing right will grow the window’s width.
#        # Pressing up will shrink the window’s height.
#        # Pressing down will grow the window’s height.
#        bindsym h resize shrink width 10 px or 10 ppt
#        bindsym t resize grow height 10 px or 10 ppt
#        bindsym n resize shrink height 10 px or 10 ppt
#        bindsym s resize grow width 10 px or 10 ppt
#
#        # same bindings, but for the arrow keys
#        bindsym Left resize shrink width 10 px or 10 ppt
#        bindsym Down resize grow height 10 px or 10 ppt
#        bindsym Up resize shrink height 10 px or 10 ppt
#        bindsym Right resize grow width 10 px or 10 ppt
#
#        # back to normal: Enter or Escape or $altG+r
#        bindsym Return mode "default"
#        bindsym Escape mode "default"
#        bindsym $altG+p mode "default"
#}

#bindsym $altG+p mode "resize"

# Start i3bar to display a workspace bar (plus the system information i3status
# finds out, if available)
bar {
	mode hide
	modifier $altG
        #status_command i3status
}

set $void       #000000
set $activeEdge #FF8800
set $offEdge    #000000
set $offEdge2   #000000


for_window [class="^.*"] border pixel 1
new_window 1pixel

# window colors
# class						border		background	    text		indicator       child_border
client.focused				$void		$activeEdge	    $void       $activeEdge     $activeEdge
client.focused_inactive		$void		$void	        $void       $offEdge2	    $offEdge2
client.unfocused			$void		$void	        #FFFFFF     $offEdge	    $offEdge

